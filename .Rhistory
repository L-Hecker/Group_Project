<<<<<<< HEAD
demo()
colors
help()
help.start()
help()
add.scope(40,50)
print("hello")
print(1+5)
?add.scope
factorial(45)
factorial(8)
factor(9)
words <- c("hello", "hi", "there")
nchar(words)
length(nchar(words))
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
?column_spec
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
?kable
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/Participation 5/participation-5-JRWeinstein/analysis.R')
View(cars_styled)
?source
?kable
?data.frame
source('~/Desktop/INFO 201/participation-5-JRWeinstein/analysis.R')
source('~/Desktop/INFO 201/participation-5-JRWeinstein/analysis.R')
?kable
source('~/Desktop/INFO 201/participation6.R')
source('~/Desktop/INFO 201/participation6.R')
source('~/Desktop/INFO 201/participation6.R')
source('~/Desktop/INFO 201/participation6.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
setwd("~/Desktop/INFO 201/Group_Project")
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
View(body)
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
View(flattened)
nyt_movies_key
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
View(body)
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
body <- GET(nyt_uri_full, query = query_params)
View(flattened)
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
View(flattened)
View(body)
View(body_content)
source('~/Desktop/INFO 201/Group_Project/nyt_wrangling.R')
View(flattened)
=======
?numericInput
# Define a new `ui` variable. This variable should be assigned a `fluidPage()` layout
# The `fluidPage()` layout should be passed the following:
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel(
"Cost Calculator"
),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(
"price", label = "Price (in dollars)", value = 0, min = 0
),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(
"quantity", label = "Quantity"), value = 1, min = 1
),
# The word "Cost", strongly bolded
p(
strong("Cost")
),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput("cost")
# Define a new `ui` variable. This variable should be assigned a `fluidPage()` layout
# The `fluidPage()` layout should be passed the following:
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel(
"Cost Calculator"
),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(
"price", label = "Price (in dollars)", value = 0, min = 0
),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(
"quantity", label = "Quantity"), value = 1, min = 1
),
# The word "Cost", strongly bolded
p(
strong("Cost")
),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput("cost")
# Install and load the `shiny` package
library(shiny)
# Define a new `ui` variable. This variable should be assigned a `fluidPage()` layout
# The `fluidPage()` layout should be passed the following:
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel(
"Cost Calculator"
),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(
"price", label = "Price (in dollars)", value = 0, min = 0
),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(
"quantity", label = "Quantity"), value = 1, min = 1
),
# The word "Cost", strongly bolded
p(
strong("Cost")
),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput("cost")
# Define a new `ui` variable. This variable should be assigned a `fluidPage()` layout
# The `fluidPage()` layout should be passed the following:
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel(
"Cost Calculator"
),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(
"price", label = "Price (in dollars)", value = 0, min = 0
),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(
"quantity", label = "Quantity"), value = 1, min = 1
),
# The word "Cost", strongly bolded
p(
strong("Cost")
),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput("cost")
runApp()
# Define a new `ui` variable. This variable should be assigned a `fluidPage()` layout
# The `fluidPage()` layout should be passed the following:
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel(
"Cost Calculator"
),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(
"price", label = "Price (in dollars)", value = 0, min = 0
),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(
"quantity", label = "Quantity", value = 1, min = 1
),
# The word "Cost", strongly bolded
p(
strong("Cost")
),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput("cost")
)
# Create a new `shinyApp()` using the above ui and server
shinyApp(ui = ui, server = server)
runApp()
library(ggplot2)
runApp('~/Desktop/ch16-shiny/exercise-3')
runApp('~/Desktop/ch16-shiny/exercise-3')
runApp('~/Desktop/ch16-shiny/exercise-3')
runApp('~/Desktop/ch16-shiny/exercise-3')
runApp('~/Desktop/ch16-shiny/exercise-3')
runApp('~/Desktop/ch16-shiny/exercise-3')
# Create a shinyUI with a `fluidPage` layout
shinyUI(fluidPage(
# A page header
h1("MPG Dataset Exploration"),
# Add a select input for the x variable
selectInput(
"x_var",
label = "X Variable",
choices = select_values,
selected = "displ"
),
# Add a select input for the y variable
selectInput(
"y_var",
label = "Y Variable",
choices = select_values,
selected = "cyl"
),
# Add a sliderInput to set the size of each point
sliderInput("size", label = "Size of point", min = 1,
max = 10, value = 5),
# Add a selectInput that allows you to select a color from a list of choices
selectInput(
"color", label = "Color", choices = list(
"Red" = "red", "Blue" = "blue", "Green" = "green"
)
),
# Plot the output with the name "scatter"
plotOutput("scatter")
))
runApp('~/Desktop/ch16-shiny/exercise-3')
setwd("~/Desktop/groupproject")
setwd("~/Desktop/groupproject")
git status
git status
source('~/Desktop/Group_Project/movie_db.R', echo=TRUE)
source('~/Desktop/Group_Project/api_keys.R', echo=TRUE)
setwd("~/Desktop/Group_Project")
source('~/Desktop/Group_Project/movie_db.R', echo=TRUE)
View(movie_stuff)
# Create a list of all the movie ID's and their addition info
revenue_info <- apply(id_list, 1, get_data)
# Create a list of all the movie ID's and their addition info
revenue_info <- apply(id_list, 1, get_data)
# Create a function that calls movie info for budget/revenue for each ID
get_data <- function(x) {
id = x[1]
movie(movie_db_key, id)
}
# Create a list of all the movie ID's and their addition info
revenue_info <- apply(id_list, 1, get_data)
# Create a list of all the movie ID's and their addition info
revenue_info <- apply(id_list, 1, get_data)
source('~/Desktop/Group_Project/movie_db.R', echo=TRUE)
source('~/Desktop/Group_Project/movie_db.R', echo=TRUE)
>>>>>>> e36ee6f3732275c1a5dbe8c20d0752ee64f7048b
